type User {
    userID: Int! @fake(type: number)
    userFirstName: String @fake(type: firstName)
    userLastName: String @fake(type: lastName)
    userStreet: String @fake(type: streetAddress)
    userCity: String @fake(type: city)
    userState: String @fake(type: state)
    userPostCode: Int @fake(type: zipCode)
    userEmail: String!
    userPasswordHash: String!
    userEmailVerified: Boolean! @examples(values: [true, false])
    roleID: Int!
    role: Role
    listings: [Listing]
}

type Role {
    roleID: Int! @fake(type: number)
    roleName: String! @fake(type: lorem)
    users: [User]
}

type Listing {
  listingID: String @fake(type: number)
  listingPostCode: Int @fake(type: number)
  listingType: String @examples(values: ["product" "service"])
  listingTitle: String @fake(type: word)
  listingCategory: String @fake(type: productCategory)
  listingCondition: String @fake(type: word)
  listingAvailibility: String @fake(type: date)
  listingPrice: String @fake(type: number)
  listingDescription: String
    @examples(
      values: [
        "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, "
      ] 
    )
}

type ConfirmCode {
  userEmail: String @examples(values: ["email@email.email"])
  confirmationCode: Int @fake(type: number)
}

type DeleteListings {
  listingID: Int @fake(type: number)
}



type Query {
  userByEmail(email: String, password: String): User
  listingsByFilter(listingPostCode: Int,listingType: String,listingCategory: String): [Listing]@listLength(min: 10, max: 30)
  adminUserSearch(id: string, role: number, keyword: string):[User]
  adminListingSearch(id: string, listingID: number, keyword: string):[Listing]
}

type Mutation {
  createUser(input: { email:String, userFirstName:String, userLastName:String, userStreet:String, userCity:String, userPostCode:Int, password:String }):User
  editUser(userID: number, input: { userFirstName:String, userLastName:String, userStreet:String, userCity:String, userPostCode:Int }):User
  confirmUser(userEmail: string, confirmationCode: number):User
  #TODO:setUserPassword(email:String, password:String, oldPassword:String):User
  createListing(input: { userID: String, listingID: String, listingPostCode: String, listingType: String, listingTitle: String, listingCategory: String, listingCondition: String, listingAvailibility: String, listingPrice: String, listingDescription: String }):Listing
  editListing(input: { userID: String, listingID: String, listingPostCode: String, listingType: String, listingTitle: String, listingCategory: String, listingCondition: String, listingAvailibility: String, listingPrice: String, listingDescription: String }):Listing
  deleteMultiListings(listings: [Int!]) Boolean!
}
